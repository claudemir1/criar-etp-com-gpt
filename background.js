// Background Service Worker para gerenciar o Side Panel

// Abre o side panel quando o usu√°rio clica no √≠cone da extens√£o
chrome.action.onClicked.addListener(tab => {
  chrome.sidePanel.open({ windowId: tab.windowId });
});

// Configura√ß√£o autom√°tica do side panel para abas do ChatGPT
chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {
  if (changeInfo.status === 'complete' && tab.url?.includes('chatgpt.com')) {
    chrome.sidePanel.setOptions({
      tabId,
      enabled: true,
    });
  }
});

// Detecta instala√ß√£o ou atualiza√ß√£o
chrome.runtime.onInstalled.addListener(async (details) => {
  const currentVersion = chrome.runtime.getManifest().version;

  if (details.reason === 'install') {
    // Primeira instala√ß√£o
    console.log('‚úÖ Extens√£o Criar ETP com ChatGPT instalada com sucesso!');

    // Define flag para mostrar modal de boas-vindas
    await chrome.storage.local.set({
      showWelcome: true,
      version: currentVersion,
      installedDate: new Date().toISOString(),
    });
  } else if (details.reason === 'update') {
    // Atualiza√ß√£o - busca a vers√£o anterior do storage
    const stored = await chrome.storage.local.get(['version']);
    const previousVersion = stored.version || details.previousVersion || '1.0';
    
    console.log(
      `üîÑ Extens√£o atualizada de ${previousVersion} para ${currentVersion}`
    );

    // S√≥ mostra modal se as vers√µes forem diferentes
    if (previousVersion !== currentVersion) {
      // Define flag para mostrar modal de novidades
      await chrome.storage.local.set({
        showWhatsNew: true,
        version: currentVersion,
        previousVersion: previousVersion,
        updatedDate: new Date().toISOString(),
      });
    }
  }
});
